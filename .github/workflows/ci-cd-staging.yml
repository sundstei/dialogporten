name: CI/CD Staging

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}

jobs:
  # Get changed files between previous tag and current tag: https://github.com/marketplace/actions/changed-files
  check-for-changes:
    name: Check for changes
    uses: ./.github/workflows/action-check-for-changes.yml

  get-current-version:
    name: Get current version
    uses: ./.github/workflows/action-get-current-version.yml

  publish:
    name: Build and publish docker images
    uses: ./.github/workflows/action-publish.yml
    if: ${{ github.event_name == 'workflow_dispatch' || needs.check-for-changes.outputs.hasBackendChanges == 'true' }}
    needs: [get-current-version, check-for-changes]
    secrets:
      GCR_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
    with:
      dockerImageBaseName: ghcr.io/digdir/dialogporten-
      version: ${{ needs.get-current-version.outputs.version }}

  deploy-infra-staging:
    name: Deploy infra to staging
    if: ${{ github.event_name == 'workflow_dispatch' || needs.check-for-changes.outputs.hasAzureChanges == 'true' }}
    needs: [get-current-version, check-for-changes]
    uses: ./.github/workflows/action-deploy-infra.yml
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_SOURCE_KEY_VAULT_NAME: ${{ secrets.AZURE_SOURCE_KEY_VAULT_NAME }}
      AZURE_SOURCE_KEY_VAULT_SUBSCRIPTION_ID: ${{ secrets.AZURE_SOURCE_KEY_VAULT_SUBSCRIPTION_ID }}
      AZURE_SOURCE_KEY_VAULT_RESOURCE_GROUP: ${{ secrets.AZURE_SOURCE_KEY_VAULT_RESOURCE_GROUP }}
    with:
      environment: staging
      region: norwayeast
      version: ${{ needs.get-current-version.outputs.version }}

  deploy-apps-staging:
    name: Deploy apps to staging
    needs:
      [get-current-version, check-for-changes, deploy-infra-staging, publish]
    # we want deployment of apps to be dependent on deployment of infrastructure, but if infrastructure is skipped, we still want to deploy the apps
    if: ${{ always() && !failure() && !cancelled() && (github.event_name == 'workflow_dispatch' || needs.check-for-changes.outputs.hasBackendChanges == 'true') }}
    uses: ./.github/workflows/action-deploy-apps.yml
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      # todo: consider resolving these in another way since they are created in the infra-step
      AZURE_RESOURCE_GROUP_NAME: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
      AZURE_ENVIRONMENT_KEY_VAULT_NAME: ${{ secrets.AZURE_ENVIRONMENT_KEY_VAULT_NAME }}
      AZURE_CONTAINER_APP_ENVIRONMENT_NAME: ${{ secrets.AZURE_CONTAINER_APP_ENVIRONMENT_NAME }}
      AZURE_APP_INSIGHTS_CONNECTION_STRING: ${{ secrets.AZURE_APP_INSIGHTS_CONNECTION_STRING }}
      AZURE_APP_CONFIGURATION_NAME: ${{ secrets.AZURE_APP_CONFIGURATION_NAME }}
    with:
      environment: staging
      region: norwayeast
      version: ${{ needs.get-current-version.outputs.version }}
      runMigration: ${{ needs.check-for-changes.outputs.hasMigrationChanges == 'true' }}

  run-e2e-tests:
    name: "Run K6 functional end-to-end tests"
    # we want the end-to-end tests to be dependent on deployment of infrastructure and apps, but if infrastructure is skipped, we still want to run the tests
    if: ${{ always() && !failure() && !cancelled() && (github.event_name == 'workflow_dispatch' || needs.check-for-changes.outputs.hasBackendChanges == 'true') }}
    needs: [deploy-apps-staging, check-for-changes]
    uses: ./.github/workflows/action-run-k6-tests.yml
    secrets:
      TOKEN_GENERATOR_USERNAME: ${{ secrets.TOKEN_GENERATOR_USERNAME }}
      TOKEN_GENERATOR_PASSWORD: ${{ secrets.TOKEN_GENERATOR_PASSWORD }}
    with:
      environment: staging
      apiVersion: v1
      testSuitePath: tests/k6/suites/all-single-pass.js
    permissions:
      checks: write
      pull-requests: write
  